---
- set_fact:
    CUR_USER_HOME: "{{ lookup('env', 'HOME') }}"
    CUR_USER: "{{ ansible_env.USER }}"

- name: Add ppa
  apt_repository:
    repo: "{{ item }}"
    state: present
    update_cache: no
  with_items: "{{ cli.ppas }}"
  when: cli.ppas
  become: true

- name: Add repo keys
  apt_key:
    url: "{{ item }}"
    state: present
  with_items: "{{ cli.ppa_keys }}"
  when: cli.ppa_keys
  become: true

- name: Install protonvpn repos
  apt:
    deb: "{{ protonvpn_deb_pkg_link }}"
  become: true

- name: Run update
  apt:
    update_cache: true
  become: true

- name: Install packages
  apt:
    name: "{{ cli.pkgs }}"
    state: latest
  become: true

- name: Install snap packages
  snap:
    name: "{{ cli.snap_pkgs }}"
  become: true

- name: Install python packges
  pip:
    name: "{{ pip_pkgs }}"
  become: true

- name: Download Docker install convenience script
  get_url:
    url: https://get.docker.com/
    dest: /tmp/get-docker.sh
    mode: 0775

- name: Run Docker install convenience script
  command: /tmp/get-docker.sh
  environment:
    CHANNEL: stable

- name: Ensure Docker is started.
  service:
    name: docker
    state: started
    enabled: true

- name: Install Docker Compose using pip
  pip:
    name: docker-compose
    state: present
    executable: "pip3"

- name: Ensure docker users are added to the docker group.
  user:
    name: "{{ CUR_USER }}"
    groups: docker
    append: true
  become: true

- name: Download dotfiles script.
  get_url:
    url: "{{ dotfiles_script }}"
    dest: /tmp/dotfiles.sh
    mode: 0775

- name: Install dotfiles
  shell: /tmp/dotfiles.sh

# - name: Build and install radare2
#   shell: |
#     git clone https://github.com/radareorg/radare2
#     pushd ./radare2
#     sys/install.sh
# ---------------------- Start nvidia drivers installation ----------------------
- name: Check Nvidia card present
  shell: lspci | grep -i --color 'vga\|3d\|2d' | grep -i NVIDIA
  register: output
  ignore_errors: true

- block:
    - debug: msg="{{ output.stdout }}"

    - name: Download custom script
      get_url:
        url: "graphic_card_utils_script"
        dest: /tmp/graphic_drivers_install.sh
        mode: 0775

    - name: Install nvidia drivers, hashcat and aircrack-ng
      shell: /tmp/graphic_drivers_install.sh
      become: true
  when: output.rc == 0
# ---------------------- Start nvidia drivers installation ----------------------

# ---------------------- Start bettercap installation ----------------------

- name: Build bettercap
  shell: |
    go env -w GO111MODULE=off
    go get -u github.com/bettercap/bettercap

- name: Install bettercap
  shell: |
    mv {{ CUR_USER_HOME }}/go/bin/bettercap /usr/local/bin/
    rm -rf {{ CUR_USER_HOME }}/go
    bettercap -version
  become: true
  register: output

- name: Display bettercap version
  debug:
    msg: "{{ output.stdout }}"
  when: output.rc == 0

- name: Install bettercap caplets
  shell: bettercap -eval "caplets.update; ui.update; q"
  when: output.rc == 0
  ignore_errors: true
  become: true
# ---------------------- End bettercap installation ----------------------

- name: Add ngrok token
  shell: "ngrok config add-authtoken {{ ngrok_token }}"
  ignore_errors: true
